apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanban-demo
  labels:
    app: kanban-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kanban-demo
  template:
    metadata:
      labels:
        app: kanban-demo
    spec:
      containers:
      - name: kanban-app
        image: kanban-demo:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        - containerPort: 3000
          name: api
        env:
        - name: NODE_ENV
          value: "production"
        - name: FRONTEND_ORIGIN
          value: "http://localhost"
        - name: RATE_LIMIT_WINDOW_MS
          value: "900000"
        - name: RATE_LIMIT_MAX_REQUESTS
          value: "100"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kanban-demo-service
  labels:
    app: kanban-demo
spec:
  selector:
    app: kanban-demo
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: api
    port: 3000
    targetPort: 3000
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kanban-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        server {
            listen 80;
            server_name _;
            root /app/frontend/dist;
            index index.html;

            location / {
                try_files $uri $uri/ /index.html;
            }

            location /api/ {
                proxy_pass http://localhost:3000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            location /health {
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
